<% layout('layouts/boilerplate_editor') %>

    <!-- Add ace editor for html. Load the script from the cdn source. Make it fully fledged with emmet 
support, autocompletion etc -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ace.js"></script>
    <!-- load emmet code and snippets compiled for browser -->
    <script src="https://rawgithub.com/ajaxorg/ace-builds/master/src/ext-emmet.js">  </script>
    <script src="https://rawgithub.com/nightwing/emmet-core/master/emmet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.12/ext-language_tools.js"></script>

    <!-- create 2 column containers -->
    <div class="row">
        <div class="col-6">

            <div class="container mt-3">
                    <!-- create checkbox and set default state depending on published status -->
                    <!-- set to checked if published is true -->
                    <div class="form-check form-switch">
                        <% if(section.published) { %>
                        <input class="form-check-input" name="published" type="checkbox" role="switch" id="publishCheck" checked>
                        <% } else { %>
                        <input class="form-check-input" name="published" type="checkbox" role="switch" id="publishCheck">
                        <% } %>
                        <label class="form-check-label" for="publishCheck">Publish Status</label>
                    </div>

                <h5 class="card-title">
                    <input name="title" type="text" class="form-control" id="exampleFormControlInput1"
                        value="<%=section.title%>">
                </h5>
                <input type="hidden" name="body">
                <!-- Place the editor of ace with a width and height -->
                <div id="editor" class="border" style="height: 500px;"></div>
                <div style="padding-top: 20px;"></div>
                <!-- Place the editor in a form and post the result to template/edit -->
                    <button onclick="location.href='/subject/part/<%=section.chapter%>'" type="button"
                        class="btn btn-secondary">
                        Go Back</button>
                    <button type="button" class="btn btn-primary" id="save-button">Save</button>
                    <button type="button" class="btn btn-success" id="preview-button">Preview</button>
                    
            </div>
            <!-- create a simple toolbar display with 3 buttons -->
            <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
                <div class="btn-group me-2" role="group" aria-label="First group">
                    <button type="button" class="btn btn-light" id="add-image">üñºÔ∏è</button>
                </div>
                <div class="btn-group me-2" role="group" aria-label="Second group">
                    <button type="button" class="btn btn-light" id="add-block-equation">‚ûó</button>
                </div>
                <div class="btn-group" role="group" aria-label="Third group">
                    <button type="button" class="btn btn-light">üìÖ</button>
                </div>
            </div>
            
        </div>

        <div class="col-6 border" style="height: 760px;overflow-y: auto;">
            <h2 id="title-text" >
                <%=section.title%>
            </h2>
            
            <% let bodyText = section.body %>
            <% if(bodyText) { %> 
                <!-- find all substrings '@' and replace it with '\' -->
                <% bodyText = bodyText.replace(/@/g, '\\') %>
                <% } %>
            
            
            
            <!-- display the body -->
            <div id="body-text">
                <%- bodyText %>
            </div>
            
        </div>
    </div>
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
          <div class="toast-header">
            <strong class="me-auto">Server</strong>
            <small>Now</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
          </div>
          <div class="toast-body">
            üíæ Successfully saved data!
          </div>
        </div>
    </div>
   
    <!-- Add the ace editor for html. enable emmet -->
    <script>
        var editor = ace.edit("editor",{
                 wrap: true, // wrap text
            });
        editor.session.setMode("ace/mode/html");
        // enable autocompletion and snippets
        ace.require("ace/ext/language_tools");
        editor.setOptions({
            enableBasicAutocompletion: true,
            enableSnippets: true,
            enableLiveAutocompletion: true
        });

        ace.require("ace/ext/emmet");
        // enable emmet on the current editor
        editor.setOption("enableEmmet", true);

        let bodyText = `<%-section.body%>`;

        // set the editor content to the body input field
        editor.setValue(bodyText);

    </script>

        <!-- script to add an image tag at current cursor location in the editor when the button add-image is clicked -->
       <!-- add image caption and center both image and caption -->
        <!--add image width -->
        <script>
            document.getElementById("add-image").addEventListener("click", function (e) {
                e.preventDefault();
                editor.insert('<figure class="text-center"><img class="figure-default" src="https://picsum.photos/200/300" alt="random image">\n<figcaption class="fig-num" id="fig-label">Random image</figcaption></figure>');
            }); </script>

<!-- script to add block latex equation tag at current cursor location in the editor when the button add-block-equation is clicked. Center the equation -->
<script>
    document.getElementById("add-block-equation").addEventListener("click", function (e) {
        e.preventDefault();
        editor.insert('<div style="display: flex; justify-content: center; align-items: baseline;margin: 0px 0px;">\n<div class="equation">\n $$e=mc^2$$</div>\n<div class="eqn-num" id="EQN_REF" style="padding-left: 10px;">\n(1)\n</div>\n</div>');
    }); </script>




<!-- Add mathjax to render latex equations -->
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

<!-- initialize mathjax -->
<script>
    MathJax = {
        tex: {
            inlineMath: [['$', '$'], ['\\(', '\\)']],
            displayMath: [['$$', '$$'], ['\\[', '\\]']]
        }
    };
</script>

<!-- script to submit the form editForm when save-button is clicked. The script then displays the response that is sent back from the server -->
<script>
    document.getElementById("save-button").addEventListener("click", function (e) {
       e.preventDefault();
       

        fetch('/subject/part/chapter/<%=section._id%>', {
            method: 'POST',
            body: JSON.stringify({
                title: document.querySelector('input[name="title" ]').value,
                body: editor.getValue(),
                published: document.querySelector('input[name="published" ]').checked
            }),
            headers: {
                'Content-Type': 'application/json'
            },
            redirect: 'follow',
            referrerPolicy: 'no-referrer',
            credentials: 'same-origin'
            // display success message once response is received. obtain section from response. Set the title-text and body-text of the section to the values obtained from the response
        }).then(response => response.json()).then(section => {
            document.getElementById("title-text").innerHTML = section.title;
            const bodyText = section.body.replace(/@/g, '\\');
            document.getElementById("body-text").innerHTML = bodyText;
            // render latex equations only in body-text
            MathJax.typesetPromise([document.getElementById("body-text")]);

            const toastLiveExample = document.getElementById('liveToast')
            const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample)
            toastBootstrap.show()
            
        });
    }); </script>


<!-- script to set the content of body-text to the editor content on button click of preview-button -->
<script>
    document.getElementById("preview-button").addEventListener("click", function (e) {
        e.preventDefault();
        const bodyText = editor.getValue().replace(/@/g, '\\');
        document.getElementById("body-text").innerHTML = bodyText;
        document.getElementById("title-text").innerHTML = document.querySelector('input[name="title" ]').value;
        // render latex equations only in body-text
        MathJax.typesetPromise([document.getElementById("body-text")]);
    }); </script>


